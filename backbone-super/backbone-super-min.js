(function(Backbone){Backbone.Model.extend=Backbone.Collection.extend=Backbone.Router.extend=Backbone.View.extend=function(protoProps,classProps){var child=inherits(this,protoProps,classProps);child.extend=this.extend;return child};var unImplementedSuper=function(method){throw"Super does not implement this method: "+method};var ctor=function(){},inherits=function(parent,protoProps,staticProps){var child,_super=parent.prototype,fnTest=/\b_super\b/;if(protoProps&&protoProps.hasOwnProperty("constructor")){child=protoProps.constructor}else{child=function(){return parent.apply(this,arguments)}}_.extend(child,parent,staticProps);ctor.prototype=parent.prototype;child.prototype=new ctor;if(protoProps){_.extend(child.prototype,protoProps);_.each(protoProps,function(protoProp,protoName){if(_.isFunction(protoProp)&&fnTest.test(protoProp)){child.prototype[protoName]=function(name,fn){var wrapper=function(){var tmp=this._super;this._super=_super[name]||unImplementedSuper(name);var ret;try{ret=fn.apply(this,arguments)}finally{this._super=tmp}return ret};_.each(fn,function(fnProp,name){wrapper[name]=fnProp;delete fn[name]});return wrapper}(protoName,protoProp)}})}if(staticProps)_.extend(child,staticProps);child.prototype.constructor=child;child.__super__=parent.prototype;return child}})(Backbone);